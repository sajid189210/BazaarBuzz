<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Coupon</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="shortcut icon" href="/uploads/favicon-32x32.png" type="image/x-icon">


    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body style="font-family: 'Poppins', system-ui;" class="h-screen">

    <div class="flex h-screen">
        <div class="z-50">
            <%- include('../partials/adminSideMenu')%>
        </div>

        <header class="fixed border-b w-full bg-white top-0 left-[250px] z-50 p-5">
            <ul class="flex items-center justify-start font-[sans-serif] space-x-4 mt-4">
                <li class="text-gray-500 text-base cursor-pointer">
                    <a href="/admin/dashboard">Dashboard</a>
                </li>
                <li>
                    <svg xmlns="http://www.w3.org/2000/svg" class="fill-gray-400 w-3.5 -rotate-90" viewBox="0 0 24 24">
                        <path fill-rule="evenodd"
                            d="M11.99997 18.1669a2.38 2.38 0 0 1-1.68266-.69733l-9.52-9.52a2.38 2.38 0 1 1 3.36532-3.36532l7.83734 7.83734 7.83734-7.83734a2.38 2.38 0 1 1 3.36532 3.36532l-9.52 9.52a2.38 2.38 0 0 1-1.68266.69734z"
                            clip-rule="evenodd" data-original="#000000"></path>
                    </svg>
                </li>
                <li class="text-black-500 text-xl font-bold cursor-pointer">
                    <a href="#">Coupon List</a>
                </li>
            </ul>
        </header>

        <main class=" relative w-full h-full pl-[250px] pt-[80px]">
            <div class="relative w-full h-full p-6">
                <div class="flex justify-end">
                    <button onclick="openCreateCouponModal()"
                        class="text-xl font-semibold bg-orange-500 hover:bg-orange-600 text-white p-2 rounded-lg">Create
                        Coupon</button>
                </div>

                <div class="w-full mt-6">
                    <table class="min-w-full bg-white p-6">
                        <thead class="bg-gray-100 whitespace-nowrap">
                            <tr>
                                <th class="text-center p-4 font-semibold text-gray-800">Coupon Code</th>
                                <th class="text-center p-4 font-semibold text-gray-800">Coupon Type</th>
                                <th class="text-center p-4 font-semibold text-gray-800">coupon Value</th>
                                <th class="text-center p-4 font-semibold text-gray-800">Expiry Date</th>
                                <th class="text-center p-4 font-semibold text-gray-800">Count</th>
                                <th class="text-center p-4 font-semibold text-gray-800">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="whitespace-nowrap">
                            <%if (coupons && coupons.length>0){%>
                                <%coupons.forEach(coupon=> {%>
                                    <tr class="hover:bg-gray-50">
                                        <td class="p-4 text-[15px] text-center text-gray-800">
                                            <%= coupon.couponCode%>
                                        </td>
                                        <td class="p-4 text-[15px] text-center text-gray-800">
                                            <%= coupon.couponType%>
                                        </td>
                                        <td class="p-4 text-[15px] text-center text-gray-800">
                                            <%= coupon.couponValue%>
                                        </td>
                                        <td class="p-4 text-[15px] text-center text-gray-800">
                                            <%= coupon.expiry.toISOString().split('T')[0]%>
                                        </td>
                                        <td class="p-4 text-[15px] text-center text-gray-800">
                                            <%= coupon.count%>
                                        </td>
                                        <td class="p-4 text-[15px] text-center text-gray-800">
                                            <div class="flex gap-4 w-full justify-center">
                                                <button onclick="openUpdateCouponModal(this)"
                                                    data-coupon-code="<%= coupon.couponCode%>"
                                                    data-coupon-type="<%= coupon.couponType%>"
                                                    data-coupon-value="<%= coupon.couponValue%>"
                                                    data-min-amount="<%= coupon.minAmount%>"
                                                    data-expiry="<%= coupon.expiry%>" data-count="<%= coupon.count%>">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                        class="w-5 fill-[#17a2b8] hover:fill-blue-700"
                                                        viewBox="0 0 348.882 348.882">
                                                        <path
                                                            d="m333.988 11.758-.42-.383A43.363 43.363 0 0 0 304.258 0a43.579 43.579 0 0 0-32.104 14.153L116.803 184.231a14.993 14.993 0 0 0-3.154 5.37l-18.267 54.762c-2.112 6.331-1.052 13.333 2.835 18.729 3.918 5.438 10.23 8.685 16.886 8.685h.001c2.879 0 5.693-.592 8.362-1.76l52.89-23.138a14.985 14.985 0 0 0 5.063-3.626L336.771 73.176c16.166-17.697 14.919-45.247-2.783-61.418zM130.381 234.247l10.719-32.134.904-.99 20.316 18.556-.904.99-31.035 13.578zm184.24-181.304L182.553 197.53l-20.316-18.556L294.305 34.386c2.583-2.828 6.118-4.386 9.954-4.386 3.365 0 6.588 1.252 9.082 3.53l.419.383c5.484 5.009 5.87 13.546.861 19.03z"
                                                            data-original="#000000" />
                                                        <path
                                                            d="M303.85 138.388c-8.284 0-15 6.716-15 15v127.347c0 21.034-17.113 38.147-38.147 38.147H68.904c-21.035 0-38.147-17.113-38.147-38.147V100.413c0-21.034 17.113-38.147 38.147-38.147h131.587c8.284 0 15-6.716 15-15s-6.716-15-15-15H68.904C31.327 32.266.757 62.837.757 100.413v180.321c0 37.576 30.571 68.147 68.147 68.147h181.798c37.576 0 68.147-30.571 68.147-68.147V153.388c.001-8.284-6.715-15-14.999-15z"
                                                            data-original="#000000" />
                                                    </svg>
                                                </button>
                                                <button onclick="deleteCoupon(this)" data-coupon-id="<%= coupon._id%>">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                        class="w-5 fill-[#e4606d] hover:fill-[#dc3545]"
                                                        viewBox="0 0 24 24">
                                                        <path
                                                            d="M19 7a1 1 0 0 0-1 1v11.191A1.92 1.92 0 0 1 15.99 21H8.01A1.92 1.92 0 0 1 6 19.191V8a1 1 0 0 0-2 0v11.191A3.918 3.918 0 0 0 8.01 23h7.98A3.918 3.918 0 0 0 20 19.191V8a1 1 0 0 0-1-1Zm1-3h-4V2a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v2H4a1 1 0 0 0 0 2h16a1 1 0 0 0 0-2ZM10 4V3h4v1Z"
                                                            data-original="#000000" />
                                                        <path
                                                            d="M11 17v-7a1 1 0 0 0-2 0v7a1 1 0 0 0 2 0Zm4 0v-7a1 1 0 0 0-2 0v7a1 1 0 0 0 2 0Z"
                                                            data-original="#000000" />
                                                    </svg>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    <% })%>
                                        <% }%>
                        </tbody>
                    </table>
                </div>

                <!-- Create Coupon Modal -->

                <div id="createCouponModal"
                    class="hidden overflow-y-auto h-full w-full p-6 absolute inset-0 bg-slate-200 bg-opacity-70">
                    <form id="createCouponForm" class="bg-white w-1/2 mx-auto p-6  rounded-lg ">
                        <button type="button" onclick="closeCreateCouponModal()"
                            class="float-right mr-4 mt-4 font-bold hover:bg-slate-100 px-2 rounded-full">X</button>
                        <h1 class="font-medium text-lg mb-4">Enter Coupon Details</h1>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="couponCode" class="font-medium">Coupon Code</label>
                                <input type="text" id="couponCode" name="couponCode"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm outline-none" />
                            </div>
                            <span id="couponCodeError" class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <div class="grid grid-cols-2 gap-x-4">
                            <div>
                                <div class="flex flex-col gap-4 mb-2">
                                    <label for="couponType" class="font-medium">Coupon Type</label>
                                    <select name="couponType" id="couponType"
                                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm">
                                        <option value="">Select</option>
                                        <option value="price">Price</option>
                                        <option value="percentage">Percentage</option>
                                    </select>
                                </div>
                                <span id="couponTypeError" class="text-red-400 block w-full text-right text-xs"></span>
                            </div>

                            <div>
                                <div class="flex flex-col gap-4 mb-2">
                                    <label for="count" class="font-medium">Count</label>
                                    <input type="number" id="count" name="count" min="1" max="10" value="1"
                                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                                </div>
                                <span id="countError" class="text-red-400 block w-full text-right text-xs"></span>
                            </div>
                        </div>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="couponValue" class="font-medium">Coupon Value</label>
                                <input type="number" id="couponValue" name="couponValue" min="0"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                            </div>
                            <span id="couponValueError" class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="minAmount" class="font-medium">Minimum Amount</label>
                                <input type="number" id="minAmount" name="minAmount" min="0"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                            </div>
                            <span id="minAmountError" class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="expiry" class="font-medium">Expiry Date</label>
                                <input type="date" id="expiry" name="expiry" min="0"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                            </div>
                            <span id="expiryError" class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <button type="submit"
                            class="w-full py-1 text-xl font-semibold bg-orange-500 hover:bg-orange-600 text-white rounded-lg mt-6">Create
                            Coupon</button>
                    </form>
                </div>

                <!-- Update Coupon Modal -->

                <div id="updateCouponModal"
                    class="hidden overflow-y-auto h-full w-full p-6 absolute inset-0 bg-slate-200 bg-opacity-70">
                    <form id="updateCouponForm" class="bg-white w-1/2 mx-auto p-6  rounded-lg ">
                        <button type="button" onclick="closeUpdateCouponModal()"
                            class="float-right mr-4 mt-4 font-bold hover:bg-slate-100 px-2 rounded-full">X</button>
                        <h1 class="font-medium text-lg mb-4">Update Coupon Details</h1>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="couponCodeForUpdate" class="font-medium">Coupon Code</label>
                                <input type="text" id="couponCodeForUpdate" name="couponCodeForUpdate"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-400 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm outline-none"
                                    disabled />
                            </div>
                            <span id="updateCouponCodeError"
                                class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <div class="grid grid-cols-2 gap-x-4">
                            <div>
                                <div class="flex flex-col gap-4 mb-2">
                                    <label for="couponTypeForUpdate" class="font-medium">Coupon Type</label>
                                    <select name="couponTypeForUpdate" id="couponTypeForUpdate"
                                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm">
                                        <option value="">Select</option>
                                        <option value="price">Price</option>
                                        <option value="percentage">Percentage</option>
                                    </select>
                                </div>
                                <span id="updateCouponTypeError"
                                    class="text-red-400 block w-full text-right text-xs"></span>
                            </div>

                            <div>
                                <div class="flex flex-col gap-4 mb-2">
                                    <label for="counForUpdatet" class="font-medium">Count</label>
                                    <input type="number" id="countForUpdate" name="countForUpdate" min="1" max="10"
                                        value="1"
                                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                                </div>
                                <span id="updateCountError" class="text-red-400 block w-full text-right text-xs"></span>
                            </div>
                        </div>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="couponValueForUpdate" class="font-medium">Coupon Value</label>
                                <input type="number" id="couponValueForUpdate" name="couponValueForUpdate" min="0"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                            </div>
                            <span id="updateCouponValueError"
                                class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="minAmountForUpdate" class="font-medium">Minimum Amount</label>
                                <input type="number" id="minAmountForUpdate" name="minAmountForUpdate" min="0"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                            </div>
                            <span id="updateMinAmountError" class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <div>
                            <div class="flex flex-col gap-4 mb-2">
                                <label for="expiryForUpdate" class="font-medium">Expiry Date</label>
                                <input type="date" id="expiryForUpdate" name="expiryForUpdate" min="0"
                                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 shadow-sm focus:border-cyan-600 focus:ring-cyan-600 sm:text-sm" />
                            </div>
                            <span id="updateExpiryError" class="text-red-400 block w-full text-right text-xs"></span>
                        </div>

                        <button type="submit"
                            class="w-full py-1 text-xl font-semibold bg-orange-500 hover:bg-orange-600 text-white rounded-lg mt-6">Update
                            Coupon</button>

                    </form>
                </div>
            </div>
        </main>
    </div>


    <script>

        //* ---------------------[Creates Coupon]------------------------

        // Clears all error messages
        function clearAllMessagesForCreateModal() {
            document.querySelector('#couponCodeError').textContent = '';
            document.querySelector('#couponTypeError').textContent = '';
            document.querySelector('#couponValueError').textContent = '';
            document.querySelector('#couponValueError').textContent = '';
            document.querySelector('#minAmountError').textContent = '';
            document.querySelector('#expiryError').textContent = '';
            document.querySelector('#countError').textContent = '';
        }

        function openCreateCouponModal() {
            document.querySelector('#createCouponModal').classList.remove('hidden');
            clearAllMessagesForCreateModal();

            // Validating the minimum expiry date.
            const formattedDate = new Date().toISOString().split('T')[0];
            document.getElementById('expiry').setAttribute('min', formattedDate);
        }

        function closeCreateCouponModal() {
            document.querySelector('#createCouponModal').classList.add('hidden');
        }

        function validateFields(couponCode, couponType, couponValue, minAmount, expiry, count) {
            let isValid = true;

            // Re-validating the minimum expiry date.
            const formattedDate = new Date().toISOString().split('T')[0];
            document.getElementById('expiry').setAttribute('min', formattedDate);

            // Validate Coupon Code
            if (!couponCode && (couponCode.length <= 16 && couponCode.length >= 1)) {
                document.querySelector('#couponCodeError').textContent = 'Coupon code is required. Should be in-between 1 & 16 characters.';
                isValid = false;
            }

            // Validate Coupon Type
            if (!couponType) {
                document.querySelector('#couponTypeError').textContent = 'Please select a coupon type.';
                isValid = false;
            }

            // Validate Coupon count
            if (!count || !(count >= 1 && count <= 10)) {
                document.querySelector('#countError').textContent = 'Count is required. Should be between numbers 1 & 10.';
                isValid = false;
            }

            // Validate Coupon Value
            if (!couponValue) {
                document.querySelector('#couponValueError').textContent = 'Coupon Value is required.';
                isValid = false;
            } else if (couponType === 'price') { // Check only if the type is price
                couponValue = Number(couponValue);
                if (isNaN(couponValue) || couponValue < 1) {
                    document.querySelector('#couponValueError').textContent = 'Coupon value must be a valid positive number.';
                    isValid = false;
                }
            } else if (couponType === 'percentage') {
                couponValue = Number(couponValue);
                if (isNaN(couponValue) || couponValue < 1 || couponValue > 100) {
                    document.querySelector('#couponValueError').textContent = 'Coupon value must be a valid number between 1 and 100 for percentage.';
                    isValid = false;
                }
            }

            // Validate Minimum Amount
            if (minAmount < 1) {
                document.querySelector('#minAmountError').textContent = 'Minimum amount must be a valid positive number. Zero does not include';
                isValid = false;
            }

            // Validate Expiry Date
            if (!expiry) {
                document.querySelector('#expiryError').textContent = 'Expiry date is required and must be in the future.';
                isValid = false;
            }
            return isValid;
        }

        // event listener for form submission.
        document.getElementById('createCouponForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            try {

                clearAllMessagesForCreateModal();

                const couponCode = document.getElementById('couponCode').value.trim();
                const couponType = document.getElementById('couponType').value;
                const minAmount = document.getElementById('minAmount').value.trim();
                const expiry = document.getElementById('expiry').value;
                let couponValue = document.getElementById('couponValue').value.trim();
                let count = document.getElementById('count').value.trim();

                const isValid = validateFields(couponCode, couponType, couponValue, minAmount, expiry, count);

                // stops the request if the the fields are invalid.
                if (!isValid) return;

                const response = await fetch('/admin/coupon', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ couponCode, couponType, couponValue, minAmount, expiry, count })
                });

                const data = await response.json();

                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 1000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });

                if (!data.success) {
                    Toast.fire({
                        icon: 'warning',
                        title: data.message
                    });
                    return;
                }

                await Toast.fire({
                    icon: "success",
                    title: data.message
                });

                closeCreateCouponModal();

                window.location.reload();

            } catch (err) {
                console.log(err);
                alert('Error')
            }
        });


        //* ---------------------[Update Coupon Fields]-----------------------------

        // Clears all error messages
        function clearAllMessagesForUpdateModal() {
            document.querySelector('#updateCouponCodeError').textContent = '';
            document.querySelector('#updateCouponTypeError').textContent = '';
            document.querySelector('#updateCouponValueError').textContent = '';
            document.querySelector('#updateCouponValueError').textContent = '';
            document.querySelector('#updateMinAmountError').textContent = '';
            document.querySelector('#updateExpiryError').textContent = '';
            document.querySelector('#updateCountError').textContent = '';
        }

        function validateFieldsForUpdate(couponCode, couponType, couponValue, minAmount, expiry, count) {
            let isValid = true;

            // Re-validating the minimum expiry date.
            const formattedDate = new Date().toISOString().split('T')[0];
            document.getElementById('expiryForUpdate').setAttribute('min', formattedDate);

            // Validate Coupon Code
            if (!couponCode && !(couponCode.length <= 16 && couponCode.length >= 1)) {
                document.querySelector('#updateCouponCodeError').textContent = 'Coupon code is required. Should be in-between 1 & 16 characters.';
                isValid = false;
            }

            // Validate Coupon Type
            if (!couponType) {
                document.querySelector('#updateCouponTypeError').textContent = 'Please select a coupon type.';
                isValid = false;
            }

            // Validate Coupon count
            if (!count || !(count >= 1 && count <= 10)) {
                document.querySelector('#updateCountError').textContent = 'Count is required. Should be between numbers 1 & 10.';
                isValid = false;
            }

            // Validate Coupon Value
            if (!couponValue) {
                document.querySelector('#updateCouponValueError').textContent = 'Coupon Value is required.';
                isValid = false;
            } else if (couponType === 'price') { // Check only if the type is price
                couponValue = Number(couponValue);
                if (isNaN(couponValue) || couponValue < 1) {
                    document.querySelector('#updateCouponValueError').textContent = 'Coupon value must be a valid positive number.';
                    isValid = false;
                }
            } else if (couponType === 'percentage') {
                couponValue = Number(couponValue);
                if (isNaN(couponValue) || couponValue < 1 || couponValue > 100) {
                    document.querySelector('#updateCouponValueError').textContent = 'Coupon value must be a valid number between 1 and 100 for percentage.';
                    isValid = false;
                }
            }

            // Validate Minimum Amount
            if (minAmount < 1) {
                document.querySelector('#updateMinAmountError').textContent = 'Minimum amount must be a valid positive number. Zero does not include';
                isValid = false;
            }

            // Validate Expiry Date
            if (!expiry) {
                document.querySelector('#updateExpiryError').textContent = 'Expiry date is required and must be in the future.';
                isValid = false;
            }
            return isValid;
        }

        function openUpdateCouponModal(event) {
            document.querySelector('#updateCouponModal').classList.remove('hidden');
            clearAllMessagesForCreateModal();

            const couponValue = event.dataset.couponValue;
            const couponType = event.dataset.couponType;
            const couponCode = event.dataset.couponCode;
            const minAmount = event.dataset.minAmount;
            const expiry = event.dataset.expiry;
            const count = event.dataset.count;

            if (!(couponValue && couponType && couponCode && minAmount && expiry && count)) {
                alert('Error required fields not found*');
                return;
            }

            document.querySelector('#couponCodeForUpdate').value = couponCode;
            document.querySelector('#couponTypeForUpdate').value = couponType;
            document.querySelector('#couponValueForUpdate').value = couponValue;
            document.querySelector('#minAmountForUpdate').value = minAmount;
            document.querySelector('#expiryForUpdate').value = new Date(expiry).toISOString().split('T')[0];
            document.querySelector('#countForUpdate').value = count;

            // Validating the minimum new Date(expiry) date.
            const formattedDate = new Date().toISOString().split('T')[0];
            document.getElementById('expiryForUpdate').setAttribute('min', formattedDate);
        }

        function closeUpdateCouponModal() {
            document.querySelector('#updateCouponModal').classList.add('hidden');
        }

        //* function to update the coupon.
        document.getElementById('updateCouponForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            try {

                clearAllMessagesForUpdateModal();

                const couponCode = document.querySelector('#couponCodeForUpdate').value;
                const couponType = document.querySelector('#couponTypeForUpdate').value;
                const couponValue = document.querySelector('#couponValueForUpdate').value;
                const minAmount = document.querySelector('#minAmountForUpdate').value;
                const expiry = document.querySelector('#expiryForUpdate').value;
                const count = document.querySelector('#countForUpdate').value;


                const isValid = validateFieldsForUpdate(couponCode, couponType, couponValue, minAmount, expiry, count);

                // stops the request if the the fields are invalid.
                if (!isValid) return;

                const response = await fetch('/admin/coupon', {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ couponCode, couponType, couponValue, minAmount, expiry, count })
                });

                const data = await response.json();

                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 1000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });

                if (!data.success) {
                    await Toast.fire({
                        icon: 'warning',
                        title: data.message
                    });
                    return;
                }

                await Toast.fire({
                    icon: "success",
                    title: data.message
                });

                closeUpdateCouponModal();

                window.location.reload();

            } catch (err) {
                console.log(err);
                alert('Error')
            }
        });

        //* -------------------[Delete Coupon]--------------------------
        async function deleteCoupon(event) {
            try {
                const couponId = event.dataset.couponId;

                if (!couponId) {
                    alert('couponId not found*');
                    return;
                }

                const { isConfirmed } = await Swal.fire({
                    title: 'Are you Sure?',
                    text: 'It will be deleted permanently.',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No'
                });

                if (isConfirmed) {
                    const response = await fetch(`/admin/coupon?couponId=${couponId}`, {
                        method: 'DELETE',
                    });

                    const data = await response.json();

                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 1000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });

                    if (!data.success) {
                        await Toast.fire({
                            title: data.message,
                            icon: 'warning'
                        });
                    }

                    await Toast.fire({
                        icon: "success",
                        title: data.message
                    });

                    window.location.reload();

                } else return;

            } catch (err) {
                console.log(err);
                alert('Error')
            }
        }

    </script>
</body>

</html>